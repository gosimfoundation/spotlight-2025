---
// Packages
import { Picture } from "astro:assets"

// Components
import Button from "components/Button.astro"

// Images
import why0 from "/public/images/homepage/why0.png"
import why2 from "/public/images/homepage/why2.png"
import why3 from "/public/images/homepage/why3.png"
import why4 from "/public/images/homepage/why4.png"

interface Props {
  introTitle?: string
  introText?: string
  programTitle?: string
  programDescription?: string
  bulletPoints?: Array<string>
  finalistText?: string
  conferenceLink?: string
  conferenceText?: string
  ctaText?: string
  ctaLink?: string
  images?: Array<{
    src: any
    alt: string
  }>
}

const {
  programTitle = "The Program",
  programDescription = "AI for Humanity Spotlight at GOSIM Hangzhou is designed to:",
  bulletPoints = [
    "Showcase groundbreaking AIGC projects - from practical applications in education, mental health, and accessibility to artistic explorations across visual art, literature, and performance.",
    "Amplify the voices behind innovation, offering visibility and recognition to impactful projects, models, and creators at the intersection of technology, society, and culture.",
    "Foster cross-disciplinary collaboration, encouraging a shared vision of symbiotic intelligence and human–AI co-creation through open dialogue and collective reflection.",
    "Selected works — including prototypes, interactive tools, and creative expressions — will be presented during the GOSIM Hangzhou Conference, held on September 13–14, 2025, in Hangzhou, China.",
  ],
  finalistText = "This year, 10+ finalist (project/paper/model) will be selected and showcased at",
  conferenceLink = "#",
  conferenceText = "GOSIM Hangzhou 2025",
  images = [
    { src: why0, alt: "GOSIM Hangzhou Spotlight program highlight" },
    { src: why2, alt: "GOSIM Hangzhou Spotlight project showcase" },
    { src: why3, alt: "GOSIM Hangzhou Spotlight innovation" },
    { src: why4, alt: "GOSIM Hangzhou Spotlight community" },
  ],
} = Astro.props
---

<section
  class="section section-program-overview"
  data-theme-section="light"
  data-bg-section="lightgray"
  id="program-overview"
>
  <div class="container">
    <!-- Program Overview -->
    <div class="row program-grid">
      <div class="col">
        <h2>{programTitle}</h2>
        <p class="program-description">{programDescription}</p>

        <ul class="feature-list">
          {
            bulletPoints.map((point) => (
              <li class="feature-item">
                <div class="check-icon">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    class="check-svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M19.916 4.626a.75.75 0 0 1 .208 1.04l-9 13.5a.75.75 0 0 1-1.154.114l-6-6a.75.75 0 0 1 1.06-1.06l5.353 5.353 8.493-12.74a.75.75 0 0 1 1.04-.207Z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </div>
                <p>{point}</p>
              </li>
            ))
          }
        </ul>

        <p class="finalist-text">
          {finalistText}
          <a href={conferenceLink} class="link-primary">{conferenceText}</a> event
          in Hangzhou, China.
        </p>
      </div>

      <div class="col col-images">
        {
          images && images.length > 0 ? (
            <div class="image-grid">
              {images.map((image, index) => (
                <div class={`image-container image-${index + 1}`}>
                  <Picture
                    src={image.src}
                    formats={["webp", "jpg"]}
                    alt={image.alt}
                    widths={[400, 800]}
                    sizes="(max-width: 767px) 100vw, 50vw"
                    class="image"
                  />
                </div>
              ))}
              <div class="gradient-circle-wrap">
                <div class="gradient-circle" />
              </div>
            </div>
          ) : (
            <div class="image-grid">
              <div class="image-container image-1">
                <div class="placeholder-image" />
              </div>
              <div class="image-container image-2">
                <div class="placeholder-image" />
              </div>
              <div class="image-container image-3">
                <div class="placeholder-image" />
              </div>
              <div class="image-container image-4">
                <div class="placeholder-image" />
              </div>
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  .section-program-overview {
    padding: 4rem 0;
  }

  .intro-title {
    font-size: 2.5rem;
    font-weight: 600;
    line-height: 1.2;
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .program-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 4rem;
    margin-top: 5rem;
  }

  .program-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
  }

  .program-description {
    margin: 3rem 0 2rem 0;
    font-size: 1.125rem;
  }

  .feature-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .feature-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    font-size: 1.25rem;
  }

  .check-icon {
    flex-shrink: 0;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 9999px;
    background-color: var(--color-primary);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .check-svg {
    width: 1rem;
    height: 1rem;
    color: white;
  }

  .link-primary {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
  }

  .finalist-text {
    margin-top: 2rem;
    font-size: 1.125rem;
  }

  .link-arrow {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    color: var(--color-text);
    text-decoration: none;
    font-weight: 700;
    margin-top: 1.25rem;
  }

  .cta-container {
    margin-top: 2rem;
  }

  .col-images {
    padding-top: 4rem;
  }

  .image-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }

  .image-container {
    aspect-ratio: 1/1;
    border-radius: 0.75rem;
    overflow: hidden;
    z-index: 1;
  }

  .image-2,
  .image-4 {
    margin-top: -2rem;
  }

  .image,
  .placeholder-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .placeholder-image {
    background-color: var(--color-lightgray);
    height: 100%;
  }

  @media (min-width: 992px) {
    .program-grid {
      grid-template-columns: 1fr 1fr;
    }

    .image-grid {
      gap: 2rem;
    }
  }

  @media (max-width: 991px) {
    .intro-title {
      font-size: 2rem;
    }

    .intro-text {
      font-size: 1.125rem;
    }

    .col-images {
      padding-top: 2rem;
    }
  }

  @media (max-width: 767px) {
    .container-wide {
      padding: 0 1.5rem;
    }

    .intro-title {
      font-size: 1.75rem;
    }

    .intro-text {
      font-size: 1rem;
    }

    .image-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>
